package com.thekoldar.aoe_rms_spoon.models.add_methods;

import java.time.ZonedDateTime;

import org.eclipse.collections.api.RichIterable;
import org.eclipse.collections.api.factory.Lists;
import org.eclipse.collections.api.list.MutableList;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.github.zafarkhaja.semver.Version;
import com.thekoldar.aoe_rms_spoon.framework.SpoonFramework;
import com.thekoldar.aoe_rms_spoon.models.ChangeLogEntry;
import com.thekoldar.aoe_rms_spoon.models.IRMSNode;

public interface AddFileInfo<TOUT> extends IRMSNode {
	
	static final Logger LOG = LoggerFactory.getLogger(AddFileInfo.class);

	public default TOUT addFileInfo(String author, String description, Version version, RichIterable<ChangeLogEntry> changelogs) {
		MutableList<String> list = Lists.mutable.empty();
		list.add("Author: " + author);
		list.add("Description: " + description);
		list.add("Version: " + description);
		list.add(String.format("File automatically generated by aoe-rms-spoon software (version %s). We have generated the file at %s", SpoonFramework.getSpoonFrameworkVersion(), ZonedDateTime.now()));
		list.add("****** CHANGELOG ********");
		
		LOG.info("compute changelogs");
		list.addAll(changelogs.collect(c -> String.format(" - %s: %s;", c.getVersion(), c.getDescription())).toList());
		LOG.info("done compute changelogs");
		
		this.addStatement(
				this.getAgeVersion().comment(list)
		);
		return (TOUT)this;
	}
	
}
